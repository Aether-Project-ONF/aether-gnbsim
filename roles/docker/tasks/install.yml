---

- name: update apt cache
  apt:
    update_cache: true
  when: inventory_hostname in groups['gnbsim_nodes']
  become: true

- name: remove previous installations
  shell:
    cmd: |
      for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
  when: inventory_hostname in groups['gnbsim_nodes']
  become: true

- name: install required system packages
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
    state: latest
  when: inventory_hostname in groups['gnbsim_nodes']
  become: true

- name: Create directory for Docker's GPG key
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  when: inventory_hostname in groups['gnbsim_nodes']
  become: true

- name: Add Docker's official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /etc/apt/keyrings/docker.asc
    state: present
  when: inventory_hostname in groups['gnbsim_nodes']
  become: true

- name: Ensure /etc/apt/keyrings/docker.asc has the correct permissions
  file:
    path: /etc/apt/keyrings/docker.asc
    mode: '0644'
  when: inventory_hostname in groups['gnbsim_nodes']
  become: true

- name: Add Docker repository to APT sources
  vars:
    arch_mapping:
      x86_64: amd64
      aarch64: arm64
  apt_repository:
    repo: "deb [arch={{ arch_mapping[ansible_architecture] | default(ansible_architecture) }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    state: present
    filename: docker
  when: inventory_hostname in groups['gnbsim_nodes']
  become: true

- name: update apt cache
  apt:
    update_cache: true
  when: inventory_hostname in groups['gnbsim_nodes']
  become: true

- name: install docker-ce
  apt:
    name: docker-ce
    state: latest
  when: inventory_hostname in groups['gnbsim_nodes']
  become: true

- name: install docker module for Python
  pip:
    name: docker
  when: inventory_hostname in groups['gnbsim_nodes']
  become: true

- name: pull hello-world docker image
  community.docker.docker_image:
    name: "hello-world"
    source: pull
  when: inventory_hostname in groups['gnbsim_nodes']
  become: true

- name: create hello-world container
  community.docker.docker_container:
    name: "hello-world"
    image: "hello-world"
    state: started
    auto_remove: true
  when: inventory_hostname in groups['gnbsim_nodes']
  become: true

- name: Create docker group
  group:
    name: docker
    state: present
  when: inventory_hostname in groups['gnbsim_nodes']
  become: true

- name: Add current user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
  when: inventory_hostname in groups['gnbsim_nodes']
  become: true

- name: Activate the new group membership (equivalent to newgrp docker)
  command: newgrp docker
  when: inventory_hostname in groups['gnbsim_nodes']
  become: true 

# # hack for docker to run as user
# - name: run docker without sudo (HACK)
#   shell:
#     cmd: |
#       chown {{ ansible_user }} /var/run/docker.sock
#   when: inventory_hostname in groups['gnbsim_nodes']
#   become: true
